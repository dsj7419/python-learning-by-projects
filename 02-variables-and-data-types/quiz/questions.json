[
    {
        "question": "Which data type would be most suitable to store the price of an item?",
        "type": "multiple",
        "answers": [
            {"text": "int", "correct": false},
            {"text": "float", "correct": true},
            {"text": "str", "correct": false},
            {"text": "bool", "correct": false}
        ],
        "reason": "Using a `float` allows you to account for both whole and fractional monetary values."
    },
    {
        "question": "Is it valid to add a float and an integer in Python?",
        "type": "truefalse",
        "answers": [
            {"text": "True", "correct": true},
            {"text": "False", "correct": false}
        ],
        "reason": "Yes, Python allows addition between a float and an integer, and the result is a float."
    },
    {
        "question": "What will be the output of the following code?",
        "code": "print(int('10') + 5)",
        "type": "multiple",
        "answers": [
            {"text": "15", "correct": true},
            {"text": "105", "correct": false},
            {"text": "TypeError", "correct": false},
            {"text": "10 + 5", "correct": false}
        ],
        "reason": "The string '10' is converted to an integer and then added to 5, resulting in 15."
    },
    {
        "question": "Which of the following is not a valid variable name?",
        "type": "multiple",
        "answers": [
            {"text": "_myVar", "correct": false},
            {"text": "myVar1", "correct": false},
            {"text": "1myVar", "correct": true},
            {"text": "my_Var", "correct": false}
        ],
        "reason": "Variable names cannot begin with a number."
    },
    {
        "question": "Which of the following will return a boolean value?",
        "type": "multiple",
        "answers": [
            {"text": "int('5')", "correct": false},
            {"text": "bool('True')", "correct": true},
            {"text": "float('5.0')", "correct": false},
            {"text": "str(5)", "correct": false}
        ],
        "reason": "The `bool()` function is used to convert a value to a boolean."
    },
    {
        "question": "The modulus operator (%) in Python returns the _____ of the division.",
        "type": "multiple",
        "answers": [
            {"text": "Quotient", "correct": false},
            {"text": "Remainder", "correct": true},
            {"text": "Result", "correct": false},
            {"text": "None of the above", "correct": false}
        ],
        "reason": "The modulus operator (%) returns the remainder of a division."
    },
    {
        "question": "What will be the output of the following code?",
        "code": "print(10 // 3)",
        "type": "multiple",
        "answers": [
            {"text": "3", "correct": true},
            {"text": "3.3333", "correct": false},
            {"text": "4", "correct": false},
            {"text": "0", "correct": false}
        ],
        "reason": "The floor division operator (//) returns the largest possible integer from a division result."
    },
    {
        "question": "In Python, a variable cannot be reassigned to a value of a different type.",
        "type": "truefalse",
        "answers": [
            {"text": "True", "correct": false},
            {"text": "False", "correct": true}
        ],
        "reason": "In Python, variables can be reassigned to a new value that is of a different type from its current value."
    },    
    {
        "question": "What is the result of the following operation: 7 ** 2?",
        "type": "multiple",
        "answers": [
            {"text": "49", "correct": true},
            {"text": "14", "correct": false},
            {"text": "28", "correct": false},
            {"text": "3.5", "correct": false}
        ],
        "reason": "The exponentiation operator (**) calculates the power of a number. So, 7 ** 2 equals 49."
    },
    {
        "question": "Which of the following data types is immutable?",
        "type": "multiple",
        "answers": [
            {"text": "List", "correct": false},
            {"text": "String", "correct": true},
            {"text": "Dictionary", "correct": false},
            {"text": "None of the above", "correct": false}
        ],
        "reason": "Strings are immutable in Python. Once a string is created, it cannot be changed."
    },
    {
        "question": "Which of the following is a correct variable assignment?",
        "type": "multiple",
        "answers": [
            {"text": "my_var == 10", "correct": false},
            {"text": "10 = my_var", "correct": false},
            {"text": "my_var = 10", "correct": true},
            {"text": "my_var: 10", "correct": false}
        ],
        "reason": "In Python, a variable is assigned a value using the '=' operator."
    },
    {
        "question": "What is the output of the following code snippet?",
        "code": "print(round(5.76543, 2))",
        "type": "multiple",
        "answers": [
            {"text": "5.77", "correct": true},
            {"text": "5.76", "correct": false},
            {"text": "6", "correct": false},
            {"text": "5", "correct": false}
        ],
        "reason": "The round() function rounds 5.76543 to 5.77 because it is specified to round to 2 decimal places."
    },
    {
        "question": "What does the following code return: type(5.0)?",
        "type": "multiple",
        "answers": [
            {"text": "<class 'int'>", "correct": false},
            {"text": "<class 'float'>", "correct": true},
            {"text": "<class 'str'>", "correct": false},
            {"text": "<class 'bool'>", "correct": false}
        ],
        "reason": "The number 5.0 is a floating-point number, so type(5.0) returns <class 'float'>."
    },
    {
        "question": "What is the result of the following operation: 10 % 3?",
        "type": "multiple",
        "answers": [
            {"text": "1", "correct": true},
            {"text": "3", "correct": false},
            {"text": "0", "correct": false},
            {"text": "30", "correct": false}
        ],
        "reason": "The modulus operator (%) returns the remainder of the division of 10 by 3, which is 1."
    },
    {
        "question": "Which of the following is NOT a fundamental data type in Python?",
        "type": "multiple",
        "answers": [
            {"text": "int", "correct": false},
            {"text": "float", "correct": false},
            {"text": "char", "correct": true},
            {"text": "bool", "correct": false}
        ],
        "reason": "Python does not have a character ('char') data type. Characters are simply strings with a length of 1."
    },
    {
        "question": "What will the following code snippet output?",
        "code": "print(int('102', 3))",
        "type": "multiple",
        "answers": [
            {"text": "102", "correct": false},
            {"text": "35", "correct": false},
            {"text": "11", "correct": true},
            {"text": "Error", "correct": false}
        ],
        "reason": "The int() function with two arguments converts the first argument to an integer treating it as a number of the base provided as the second argument. Thus, '102' in base 3 is converted to 11 in base 10."
    },
    {
        "question": "Is it possible to concatenate a string and an integer directly in Python?",
        "type": "truefalse",
        "answers": [
            {"text": "True", "correct": false},
            {"text": "False", "correct": true}
        ],
        "reason": "In Python, you cannot directly concatenate a string and an integer. You need to convert the integer to a string using str() before concatenation."
    },
    {
        "question": "What is the result of the following operation: 2 ** 3?",
        "type": "multiple",
        "answers": [
            {"text": "6", "correct": false},
            {"text": "8", "correct": true},
            {"text": "5", "correct": false},
            {"text": "9", "correct": false}
        ],
        "reason": "The ** operator calculates the power of a number. So, 2 ** 3 equals 8."
    },
    {
        "question": "Which of the following correctly represents a floating-point number?",
        "type": "multiple",
        "answers": [
            {"text": "100", "correct": false},
            {"text": "100.0", "correct": true},
            {"text": "100.00.00", "correct": false},
            {"text": "One Hundred", "correct": false}
        ],
        "reason": "100.0 is a valid representation of a floating-point number."
    },
    {
        "question": "What does 'Dynamic Typing' mean in Python?",
        "type": "multiple",
        "answers": [
            {"text": "Variables can change type after they have been set.", "correct": true},
            {"text": "Variables must be declared before use.", "correct": false},
            {"text": "Variables cannot change type once set.", "correct": false},
            {"text": "Variables can only hold integer values.", "correct": false}
        ],
        "reason": "Dynamic Typing means that variables are allowed to change their type during the program execution."
    }
]