[
    {
        "question": "Which function is used to capture user input in Python?",
        "type": "multiple",
        "answers": [
            {"text": "get()", "correct": false},
            {"text": "input()", "correct": true},
            {"text": "read()", "correct": false},
            {"text": "fetch()", "correct": false}
        ],
        "reason": "The `input()` function is used to capture user input as a string in Python."
    },
    {
        "question": "The random.choice() function is used to select a random item from a dictionary.",
        "type": "truefalse",
        "answers": [
            {"text": "True", "correct": false},
            {"text": "False", "correct": true}
        ],
        "reason": "The `random.choice()` function can be used with a sequence like a list, tuple, or string. Dictionaries are not considered sequences."
    },
    {
        "question": "What does the input() function return?",
        "type": "multiple",
        "answers": [
            {"text": "Integer", "correct": false},
            {"text": "Float", "correct": false},
            {"text": "String", "correct": true},
            {"text": "Boolean", "correct": false}
        ],
        "reason": "The `input()` function always returns the user input as a string."
    },
    {
        "question": "The print() function can only output strings.",
        "type": "truefalse",
        "answers": [
            {"text": "True", "correct": false},
            {"text": "False", "correct": true}
        ],
        "reason": "The `print()` function can output various data types, such as strings, integers, and floats, by converting them into a string representation."
    },
    {
        "question": "What will the following code snippet output?",
        "code": "print(\"Hello\", \"World\", sep=\"-\")",
        "type": "multiple",
        "answers": [
            {"text": "Hello World", "correct": false},
            {"text": "HelloWorld", "correct": false},
            {"text": "Hello-World", "correct": true},
            {"text": "Hello_World", "correct": false}
        ],
        "reason": "The `sep` parameter in the `print()` function specifies the separator between the output values. In this case, it is a hyphen."
    },
    {
        "question": "Which of the following code snippets will continuously ask the user for a number until a valid input is provided?",
        "type": "multiple",
        "answers": [
            {"code": "while True:\n    user_input = input('Enter a number:')\n    if user_input.isnumeric():\n        break", "correct": true},
            {"code": "while False:\n    user_input = input('Enter a number:')\n    if user_input.isnumeric():\n        break", "correct": false},
            {"code": "while True:\n    user_input = input('Enter a number:')\n    if not user_input.isnumeric():\n        break", "correct": false},
            {"code": "while user_input.isnumeric():\n    user_input = input('Enter a number:')", "correct": false}
        ],
        "reason": "Option a) utilizes a `while True` loop that will continuously prompt the user until `user_input.isnumeric()` is True, at which point it will `break` out of the loop."
    },
    {
        "question": "The random.seed() function ensures that the random number generated is different every time the code is run.",
        "type": "truefalse",
        "answers": [
            {"text": "True", "correct": false},
            {"text": "False", "correct": true}
        ],
        "reason": "The `random.seed()` function is used to initialize the random number generator. Providing a specific seed value will produce the same sequence of random numbers each run."
    },
    {
        "question": "What does the sep parameter do in the print() function?",
        "type": "multiple",
        "answers": [
            {"text": "Separates values with a specific character.", "correct": true},
            {"text": "Checks the spelling of the output.", "correct": false},
            {"text": "Encrypts the output.", "correct": false},
            {"text": "Converts output to uppercase.", "correct": false}
        ],
        "reason": "The `sep` parameter in the `print()` function specifies the separator between the output values."
    },
    {
        "question": "The random.choice() function can be used to select a random character from a string.",
        "type": "truefalse",
        "answers": [
            {"text": "True", "correct": true},
            {"text": "False", "correct": false}
        ],
        "reason": "The `random.choice()` function can select a random element from a sequence, and strings are sequences of characters in Python."
    },
    {
        "question": "Which of the following is NOT a valid string method in Python?",
        "type": "multiple",
        "answers": [
            {"text": ".isnumeric()", "correct": false},
            {"text": ".isalpha()", "correct": false},
            {"text": ".islowercase()", "correct": true},
            {"text": ".isupper()", "correct": false}
        ],
        "reason": "There is no string method named `.islowercase()` in Python."
    },
    {
        "question": "What does the `input()` function automatically convert user input to?",
        "type": "multiple",
        "answers": [
            {"text": "Integer", "correct": false},
            {"text": "Float", "correct": false},
            {"text": "String", "correct": true},
            {"text": "Boolean", "correct": false}
        ],
        "reason": "The `input()` function automatically converts user input to a string."
    },
    {
        "question": "Which method can be used to generate a random integer within a specific range in Python?",
        "type": "multiple",
        "answers": [
            {"text": "random.int()", "correct": false},
            {"text": "random.rangeint()", "correct": false},
            {"text": "random.randint()", "correct": true},
            {"text": "random.rangenum()", "correct": false}
        ],
        "reason": "`random.randint()` is used to generate a random integer within a specific range."
    },
    {
        "question": "What is the purpose of using `random.seed()` in your code?",
        "type": "multiple",
        "answers": [
            {"text": "To ensure different random values every run", "correct": false},
            {"text": "To ensure the same random values every run", "correct": true},
            {"text": "To generate a random number", "correct": false},
            {"text": "None of the above", "correct": false}
        ],
        "reason": "`random.seed()` is used to initialize the random number generator and ensures that the same random values are generated every run."
    },
    {
        "question": "How can you concatenate strings in the `print()` function?",
        "type": "multiple",
        "answers": [
            {"text": "Using commas", "correct": true},
            {"text": "Using plus (+) operator", "correct": true},
            {"text": "Using minus (-) operator", "correct": false},
            {"text": "Using multiplication (*) operator", "correct": false}
        ],
        "reason": "You can concatenate strings using both commas and the plus (+) operator in the `print()` function."
    },
    {
        "question": "Which of the following can be used to check if the user input is alphabetical?",
        "type": "multiple",
        "answers": [
            {"text": ".isalpha()", "correct": true},
            {"text": ".isalnum()", "correct": false},
            {"text": ".isdigit()", "correct": false},
            {"text": ".isnumeric()", "correct": false}
        ],
        "reason": "The `.isalpha()` method checks whether the string consists of alphabetical characters only."
    },
    {
        "question": "What will the following code snippet output?",
        "code": "print('Hello', 'World', sep='_')",
        "type": "multiple",
        "answers": [
            {"text": "Hello World", "correct": false},
            {"text": "Hello_World", "correct": true},
            {"text": "HelloWorld", "correct": false},
            {"text": "Hello-World", "correct": false}
        ],
        "reason": "The `sep` parameter in the `print()` function specifies the separator between the output values. In this case, it is an underscore."
    },
    {
        "question": "How would you create an infinite loop that keeps asking for input until a numeric value is provided?",
        "type": "multiple",
        "answers": [
            {"code": "while True:\n    user_input = input('Enter a number:')\n    if user_input.isnumeric():\n        break", "correct": true},
            {"code": "while True:\n    user_input = input('Enter a number:')\n    if not user_input.isnumeric():\n        continue", "correct": false},
            {"code": "while user_input.isnumeric():\n    user_input = input('Enter a number:')", "correct": false},
            {"code": "while True:\n    user_input = input('Enter a number:')\n    if user_input.isalpha():\n        break", "correct": false}
        ],
        "reason": "Option a) will create an infinite loop that breaks only when the user input is numeric, ensuring valid input."
    },
    {
        "question": "What will the following code snippet output?\n```python\nprint('Hello', 'World', end='!')```",
        "type": "multiple",
        "answers": [
            {"text": "Hello World!", "correct": true},
            {"text": "Hello! World", "correct": false},
            {"text": "Hello World", "correct": false},
            {"text": "HelloWorld!", "correct": false}
        ],
        "reason": "The `end` parameter in the `print()` function specifies the end string to print. In this case, it is '!'."
    },
    {
        "question": "Which of the following is a valid way to format strings in Python?",
        "type": "multiple",
        "answers": [
            {"text": "Using f-strings: f'Hello {name}'", "correct": true},
            {"text": "Using concatenation: 'Hello ' + name", "correct": true},
            {"text": "Using placeholders: 'Hello {}'.format(name)", "correct": true},
            {"text": "All of the above", "correct": true}
        ],
        "reason": "All three options are valid ways to format strings in Python: f-strings, concatenation, and placeholders with the format method."
    }    
]
